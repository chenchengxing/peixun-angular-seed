var fs = require( 'fs' );
var path = require( 'path' );
var util = require( 'util' );
module.exports = function ( grunt ) {
  grunt.registerTask( 'add', 'add feature for Angular seed project like demo', function ( featureName ) {
    if ( !featureName ) {
      grunt.log.warn( 'Feature name must be specified, like add:Demo.' );
    } else {
      // grunt.log.warn( 'here' + featureName + exists);
      var appPath = 'src/app';
      //if there is src directory
      var exists = fs.existsSync( appPath );

      util.debug( exists ? "it's there" : "no passwd!" );
      if ( !exists ) {
        fs.mkdirSync( appPath );
      }

      if ( grunt.file.exists( appPath, featureName ) ) {
        grunt.fail.warn( 'Feature already exists in ' + path.join( appPath, featureName).cyan );
      }
      function toCtrl ( string ) {
        return 'Ctrl' + string.substr(0, 1).toUpperCase() + string.substr(1);
      }
      //creating feature tpl
      var tplPath = path.join( appPath, featureName, featureName + '.tpl.html' );
      var cssPath = path.join( appPath, featureName, featureName + '.css' );
      var ctrlPath = path.join( appPath, featureName, toCtrl( featureName ) + '.js' );
      var specPath = path.join( appPath, featureName, toCtrl( featureName ) + '.spec.js' );
      grunt.file.copy( 'node_modules/yt/featureTemplate/demo.tpl.html', tplPath, {
        process: function (content) {
          return content.replace( /demo/g, featureName );
        }
      });
      grunt.file.copy( 'node_modules/yt/featureTemplate/demo.css', cssPath, {
        process: function (content) {
          return content.replace( /demo/g, featureName );
        }
      });
      grunt.file.copy( 'node_modules/yt/featureTemplate/CtrlDemo.js', ctrlPath, {
        process: function (content) {
          return content.replace( /demo/g, featureName ).replace( /Demo/g, featureName.substr(0, 1).toUpperCase() + featureName.substr(1) );
        }
      });
      grunt.file.copy( 'node_modules/yt/featureTemplate/CtrlDemo.spec.js', specPath, {
        process: function (content) {
          return content.replace( /demo/g, featureName ).replace( /Demo/g, featureName.substr(0, 1).toUpperCase() + featureName.substr(1) );
        }
      });
      //add state in routeDefs.js
      if ( !grunt.file.exists( appPath, 'routeDefs.js' ) ) {
        grunt.fail.fatal( 'routeDefs.js not defined in app,make sure you haven\'t delete it.' );
      }
      var routeJsPath = path.join( appPath, 'routeDefs.js' );
      grunt.file.copy( routeJsPath, routeJsPath, {
        process: function (content) {
          return content.replace( /angular.noop\(\);/,
          ('$stateProvider.state(\'demo\', {' + '\n' +
            '          url: \'/demo\',' + '\n' +
            '          templateUrl: \'demo/demo.tpl.html\',' + '\n' +
            '          controller: \'CtrlDemo\',' + '\n' +
            '          resolve: {' + '\n' +
            '            dummy: $couchPotatoProvider.resolveDependencies([\'demo/CtrlDemo\'])' + '\n' +
            '          }' + '\n' +
            '        });' + '\n' +
            '        angular.noop\(\);').replace( /demo/g, featureName ).replace( /Demo/g, featureName.substr(0, 1).toUpperCase() + featureName.substr(1) ));
        }
      });
    }
  });
}